from typing import Union

from fastapi import HTTPException, APIRouter, Request
from pydantic import BaseModel
from dotenv import load_dotenv

import os
import logging
import requests

load_dotenv()

# Define your Telegram bot token
TELEGRAM_BOT_TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')
WEBHOOK_URL = os.getenv('BASE_URL') + "/webhook"

router = APIRouter()


class Update(BaseModel):
    update_id: int
    message: dict


@router.post(f"")
async def webhook(update: Update):
    logging.info(update)
    print(update)

    url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"

    reply_markup = {
        "inline_keyboard": [[{
            "text": "go to game",
            "web_app": {"url": "https://756e-89-107-97-177.ngrok-free.app"}
        }]]
    }

    payload = {
        "chat_id": update.message.get('from').get('id'),
        "text": """üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Smart Analytics!

Smart Analytics ‚Äî —ç—Ç–æ –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –≤ –º–∏—Ä–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç –∏ —Ñ–æ–Ω–¥–æ–≤–æ–≥–æ —Ä—ã–Ω–∫–∞. –ü–æ–ª—É—á–∞–π—Ç–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –∞–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ —Ä—ã–Ω–æ–∫ –∏ –ø—Ä–∏–Ω–∏–º–∞–π—Ç–µ –≤–∑–≤–µ—à–µ–Ω–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è.

üîç –ò—Å—Å–ª–µ–¥—É–π—Ç–µ —Ä—ã–Ω–æ–∫: –û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω, –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ç–æ—Ä–≥–æ–≤ –∏ —Ä–æ—Å—Ç –∞–∫—Ç–∏–≤–æ–≤ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏.

üìà –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –¥–∞–Ω–Ω—ã–µ: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –≥–ª—É–±–æ–∫–æ–≥–æ –ø–æ–Ω–∏–º–∞–Ω–∏—è —Ä—ã–Ω–æ—á–Ω—ã—Ö —Ç–µ–Ω–¥–µ–Ω—Ü–∏–π.

üíº –ü–æ–¥–ø–∏—Å–∫–∞: –û—Ç–∫—Ä–æ–π—Ç–µ –¥–æ—Å—Ç—É–ø –∫ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–º —Ñ—É–Ω–∫—Ü–∏—è–º –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –º–∞–∫—Å–∏–º—É–º –ø–æ–ª–µ–∑–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.

–£–¥–∞—á–∏ –≤ –≤–∞—à–∏—Ö –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è—Ö –∏ —É—Å–ø–µ—à–Ω—ã—Ö —Å–¥–µ–ª–æ–∫! üöÄ""",
        "reply_markup": reply_markup,
    }

    response = requests.post(url, json=payload)
    logging.info(response)
    print(response)
    return {"Status": "ok"}


# @router.on_event("startup")
# async def on_startup():
#     url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/setWebhook"
#     payload = {"url": WEBHOOK_URL}
#     response = requests.post(url, json=payload)
#     if response.status_code != 200:
#         raise HTTPException(status_code=response.status_code, detail="Failed to set webhook")
#     logging.info(f"Webhook set: {WEBHOOK_URL}")
#     print(f"Webhook set: {WEBHOOK_URL}")
#
#
# @router.on_event("shutdown")
# async def on_shutdown():
#     url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/deleteWebhook"
#     response = requests.post(url)
#     if response.status_code != 200:
#         raise HTTPException(status_code=response.status_code, detail="Failed to delete webhook")
#     logging.info("Webhook deleted")
